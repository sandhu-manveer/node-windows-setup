@echo off
REM setup git and login
ECHO initialize git? (y/n)
ECHO.
set git=
set /p git=
if '%git%'=='y' goto :gitStart
if '%git%'=='n' goto :gitEnd
goto gitEnd

:gitStart
git init
git config user.name "sandhu-manveer"
git config user.email "sandhu94manveer@gmail.com"
goto gitEnd

:gitEnd

(
@echo # Logs
@echo logs
@echo *.log
@echo npm-debug.log*
@echo yarn-debug.log*
@echo yarn-error.log*
@echo: 
@echo # Runtime data
@echo pids
@echo *.pid
@echo *.seed
@echo *.pid.lock
@echo: 
@echo # Directory for instrumented libs generated by jscoverage/JSCover
@echo lib-cov
@echo: 
@echo # Coverage directory used by tools like istanbul
@echo coverage
@echo: 
@echo # nyc test coverage
@echo .nyc_output
@echo: 
@echo # Grunt intermediate storage ^(http://gruntjs.com/creating-plugins#storing-task-files^)
@echo .grunt
@echo: 
@echo # Bower dependency directory ^(https://bower.io/^)
@echo bower_components
@echo: 
@echo # node-waf configuration
@echo .lock-wscript
@echo: 
@echo # Compiled binary addons ^(https://nodejs.org/api/addons.html^)
@echo build/Release
@echo: 
@echo # Dependency directories
@echo node_modules/
@echo jspm_packages/
@echo: 
@echo # TypeScript v1 declaration files
@echo typings/
@echo: 
@echo # Optional npm cache directory
@echo .npm
@echo: 
@echo # Optional eslint cache
@echo .eslintcache
@echo: 
@echo # Optional REPL history
@echo .node_repl_history
@echo: 
@echo # Output of 'npm pack'
@echo *.tgz
@echo: 
@echo # Yarn Integrity file
@echo .yarn-integrity
@echo: 
@echo # dotenv environment variables file
@echo .env
@echo: 
@echo # next.js build output
@echo .next
@echo: 
@echo # vuepress build output
@echo .vuepress/dist
@echo: 
@echo # Serverless directories
@echo .serverless
@echo: 
@echo # IDE - VSCode
@echo .vscode/*
@echo !.vscode/settings.json
@echo !.vscode/tasks.json
@echo !.vscode/launch.json
@echo !.vscode/extensions.json
) > .gitignore

REM setup bluemix files
ECHO add cfignore? (y/n)
ECHO.
set bluemix=
set /p bluemix=
if '%bluemix%'=='y' goto :bluemixStart
if '%bluemix%'=='n' goto :bluemixEnd
goto bluemixEnd

:bluemixStart
(
@echo # Logs
@echo logs
@echo *.log
@echo npm-debug.log*
@echo yarn-debug.log*
@echo yarn-error.log*
@echo: 
@echo # Runtime data
@echo pids
@echo *.pid
@echo *.seed
@echo *.pid.lock
@echo: 
@echo # Directory for instrumented libs generated by jscoverage/JSCover
@echo lib-cov
@echo: 
@echo # Coverage directory used by tools like istanbul
@echo coverage
@echo: 
@echo # nyc test coverage
@echo .nyc_output
@echo: 
@echo # Grunt intermediate storage ^(http://gruntjs.com/creating-plugins#storing-task-files^)
@echo .grunt
@echo: 
@echo # Bower dependency directory ^(https://bower.io/^)
@echo bower_components
@echo: 
@echo # node-waf configuration
@echo .lock-wscript
@echo: 
@echo # Compiled binary addons ^(https://nodejs.org/api/addons.html^)
@echo build/Release
@echo: 
@echo # Dependency directories
@echo node_modules/
@echo jspm_packages/
@echo: 
@echo # TypeScript v1 declaration files
@echo typings/
@echo: 
@echo # Optional npm cache directory
@echo .npm
@echo: 
@echo # Optional eslint cache
@echo .eslintcache
@echo: 
@echo # Optional REPL history
@echo .node_repl_history
@echo: 
@echo # Output of 'npm pack'
@echo *.tgz
@echo: 
@echo # Yarn Integrity file
@echo .yarn-integrity
@echo: 
@echo # dotenv environment variables file
@echo .env
@echo: 
@echo # next.js build output
@echo .next
@echo: 
@echo # vuepress build output
@echo .vuepress/dist
@echo: 
@echo # Serverless directories
@echo .serverless
@echo: 
@echo # IDE - VSCode
@echo .vscode/*
@echo !.vscode/settings.json
@echo !.vscode/tasks.json
@echo !.vscode/launch.json
@echo !.vscode/extensions.json
) > .cfignore
goto bluemixEnd

:bluemixEnd

REM setup eslint (assuming eslint is installed)
ECHO initialize eslint? (y/n)
ECHO.
set eslint=
set /p eslint=
if '%eslint%'=='y' goto :eslintStart
if '%eslint%'=='n' goto :eslintEnd
goto eslintEnd

:eslintStart
echo "Initializing eslint"
call eslint --init

(
@echo dist/*
@echo node_modules/*
@echo .vscode
) > .eslintignore

:eslintEnd

REM setup readme
(
@echo # Readme
) > Readme.md

REM run npm init
ECHO initialize node? (y/n)
ECHO.
set node=
set /p node=
if '%node%'=='y' goto :nodeStart
if '%node%'=='n' goto :nodeEnd
goto nodeEnd

:nodeStart
call npm init
goto nodeEnd

:nodeEnd